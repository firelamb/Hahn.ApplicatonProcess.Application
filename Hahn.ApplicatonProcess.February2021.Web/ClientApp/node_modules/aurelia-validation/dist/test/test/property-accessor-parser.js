define(["require", "exports", "aurelia-dependency-injection", "aurelia-templating", "aurelia-templating-binding", "../src/aurelia-validation"], function (require, exports, aurelia_dependency_injection_1, aurelia_templating_1, aurelia_templating_binding_1, aurelia_validation_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    describe('PropertyAccessorParser', function () {
        var parser;
        beforeAll(function () {
            var container = new aurelia_dependency_injection_1.Container();
            container.registerInstance(aurelia_templating_1.BindingLanguage, container.get(aurelia_templating_binding_1.TemplatingBindingLanguage));
            parser = container.get(aurelia_validation_1.PropertyAccessorParser);
        });
        it('parses properties', function () {
            expect(parser.parse('firstName')).toEqual('firstName');
            expect(parser.parse('3_letter_id')).toEqual('3_letter_id');
            expect(parser.parse('. @$# ???')).toEqual('. @$# ???');
            expect(parser.parse(42)).toEqual(42);
            expect(parser.parse(function (x) { return x.firstName; })).toEqual('firstName');
        });
        it('parses function bodies', function () {
            expect(aurelia_validation_1.getAccessorExpression('function(a){return a.b}')).toEqual('b');
            expect(aurelia_validation_1.getAccessorExpression('function(a){return a.b;}')).toEqual('b');
            expect(aurelia_validation_1.getAccessorExpression('function (a){return a.b;}')).toEqual('b');
            expect(aurelia_validation_1.getAccessorExpression('function(a) {return a.b;}')).toEqual('b');
            expect(aurelia_validation_1.getAccessorExpression('function (a) { return a.b; }')).toEqual('b');
            expect(aurelia_validation_1.getAccessorExpression('function (a1) { return a1.bcde; }')).toEqual('bcde');
            expect(aurelia_validation_1.getAccessorExpression('function ($a1) { return $a1.bcde; }')).toEqual('bcde');
            expect(aurelia_validation_1.getAccessorExpression('function (_) { return _.bc_de; }')).toEqual('bc_de');
            expect(aurelia_validation_1.getAccessorExpression('function (a) {"use strict"; return a.b; }')).toEqual('b');
            expect(aurelia_validation_1.getAccessorExpression('function (a) { "use strict";  return a.b; }')).toEqual('b');
            expect(aurelia_validation_1.getAccessorExpression('a=>a.b')).toEqual('b');
            expect(aurelia_validation_1.getAccessorExpression('a =>a.b')).toEqual('b');
            expect(aurelia_validation_1.getAccessorExpression('a=> a.b')).toEqual('b');
            expect(aurelia_validation_1.getAccessorExpression('a => a.b')).toEqual('b');
            expect(aurelia_validation_1.getAccessorExpression('a => a.bcde')).toEqual('bcde');
            expect(aurelia_validation_1.getAccessorExpression('_ => _.b')).toEqual('b');
            expect(aurelia_validation_1.getAccessorExpression('$ => $.b')).toEqual('b');
            expect(aurelia_validation_1.getAccessorExpression('(x) => x.name')).toEqual('name');
            // tslint:disable-next-line:max-line-length
            expect(aurelia_validation_1.getAccessorExpression('function(a){__gen$field.f[\'10\']++;__aGen$field.g[\'10\']++;return a.b;}'))
                .toEqual('b');
            // tslint:disable-next-line:max-line-length
            expect(aurelia_validation_1.getAccessorExpression('function(a){"use strict";_gen$field.f[\'10\']++;_aGen$field.g[\'10\']++;return a.b;}'))
                .toEqual('b');
            // tslint:disable-next-line:max-line-length
            expect(aurelia_validation_1.getAccessorExpression('function(a){/* istanbul ignore next */ cov_1wjh4ld5ut.f[9]++;cov_1wjh4ld5ut.s[50]++;return a.b;}'))
                .toEqual('b');
        });
    });
});
