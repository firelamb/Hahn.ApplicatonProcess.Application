define(["require", "exports", "tslib", "aurelia-dependency-injection", "aurelia-templating", "../../src/aurelia-validation"], function (require, exports, tslib_1, aurelia_dependency_injection_1, aurelia_templating_1, aurelia_validation_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var RegistrationForm = /** @class */ (function () {
        function RegistrationForm(controllerFactory) {
            this.firstName = '';
            this.lastName = '';
            this.email = '';
            this.number1 = 0;
            this.number2 = 0;
            this.password = '';
            this.confirmPassword = '';
            this.ceValue = '';
            this.showForm = true;
            this.controller = controllerFactory.createForCurrentScope();
        }
        RegistrationForm = tslib_1.__decorate([
            aurelia_templating_1.inlineView("\n<template>\n  <form novalidate autocomplete=\"off\" if.bind=\"showForm\">\n    <input        id=\"firstName\" type=\"text\" value.bind=\"firstName & validate\">\n    <input        id=\"lastName\"  type=\"text\" value.bind=\"lastName & validate\">\n    <input        id=\"email\"     type=\"text\" value.bind=\"email & validate\">\n    <input        id=\"number1\"   type=\"text\" number-value.bind=\"number1 & validate\">\n    <number-input id=\"number2\"               value.bind=\"number2 & validate\"></number-input>\n    <input        id=\"password\"        type=\"text\" value.bind=\"password & validate\">\n    <input        id=\"confirmPassword\" type=\"text\" value.bind=\"confirmPassword & validate\">\n    <custom-input id=\"ce\" value.two-way=\"ceValue & validate\"></custom-input>\n  </form>\n</template>"),
            aurelia_dependency_injection_1.inject(aurelia_validation_1.ValidationControllerFactory)
        ], RegistrationForm);
        return RegistrationForm;
    }());
    exports.RegistrationForm = RegistrationForm;
    aurelia_validation_1.ValidationRules.customRule('matchesProperty', function (value, obj, otherPropertyName) {
        return value === null
            || value === undefined
            || value === ''
            || obj[otherPropertyName] === null
            || obj[otherPropertyName] === undefined
            || obj[otherPropertyName] === ''
            || value === obj[otherPropertyName];
    }, '${$displayName} must match ${$getDisplayName($config.otherPropertyName)}', function (otherPropertyName) { return ({ otherPropertyName: otherPropertyName }); });
    aurelia_validation_1.ValidationRules
        .ensure(function (f) { return f.firstName; }).required().matches(/foo/)
        .ensure(function (f) { return f.lastName; }).required()
        .ensure('email').required().email()
        .ensure(function (f) { return f.number1; }).satisfies(function (value) { return value > 0; })
        .ensure(function (f) { return f.number2; }).satisfies(function (value) { return value > 0; }).withMessage('${displayName} gots to be greater than zero.')
        .ensure(function (f) { return f.password; }).required()
        .ensure(function (f) { return f.confirmPassword; }).required().satisfiesRule('matchesProperty', 'password')
        .ensure(function (f) { return f.ceValue; }).required().matches(/foo/)
        .on(RegistrationForm);
});
