{"map":"{\"version\":3,\"file\":\"nf-value-converter.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/nf/nf-value-converter.ts\"],\"names\":[],\"mappings\":\";AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,SAAS,CAAC;AAC/B,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AAGjD,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAG3B,YAAoB,OAAa;QAAb,YAAO,GAAP,OAAO,CAAM;IAAG,CAAC;IAF9B,MAAM,CAAC,MAAM,KAAK,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAIlC,MAAM,CACX,KAAU,EACV,WAA0D,EAC1D,MAAe;QAEf,IAAI,KAAK,KAAK,IAAI;eACb,OAAO,KAAK,KAAK,WAAW;eAC5B,CAAC,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,EACnD;YACF,OAAO,KAAK,CAAC;SACd;QAED,IAAI,WAAW,IAAI,CAAC,WAAW,YAAY,IAAI,CAAC,YAAY,IAAI,OAAO,WAAW,CAAC,MAAM,KAAK,UAAU,CAAC,EAAE;YACzG,OAAO,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAClC;QAED,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,WAAuC,EAAE,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC;QACxG,OAAO,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;CACF,CAAA;AAxBY,gBAAgB;IAD5B,cAAc,CAAC,IAAI,CAAC;GACR,gBAAgB,CAwB5B;SAxBY,gBAAgB\"}","code":"import * as tslib_1 from \"tslib\";\nimport { I18N } from \"../i18n\";\nimport { valueConverter } from \"aurelia-binding\";\nlet NfValueConverter = class NfValueConverter {\n    constructor(service) {\n        this.service = service;\n    }\n    static inject() { return [I18N]; }\n    toView(value, nfOrOptions, locale) {\n        if (value === null\n            || typeof value === \"undefined\"\n            || (typeof value === \"string\" && value.trim() === \"\")) {\n            return value;\n        }\n        if (nfOrOptions && (nfOrOptions instanceof Intl.NumberFormat && typeof nfOrOptions.format === \"function\")) {\n            return nfOrOptions.format(value);\n        }\n        const nf = this.service.nf(nfOrOptions, locale || this.service.getLocale());\n        return nf.format(value);\n    }\n};\nNfValueConverter = tslib_1.__decorate([\n    valueConverter(\"nf\")\n], NfValueConverter);\nexport { NfValueConverter };\n//# sourceMappingURL=nf-value-converter.js.map"}
