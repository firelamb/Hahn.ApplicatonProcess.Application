{"map":"{\"version\":3,\"file\":\"utils.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/utils.ts\"],\"names\":[],\"mappings\":\";;AAAA,OAAO,EACL,QAAQ,EAET,MAAM,8BAA8B,CAAC;AAEtC,MAAM,CAAC,IAAI,MAAM,GAAG,CAAC,WAAgB,EAAE,MAAW,EAAE,EAAE;IACpD,iCAAiC;IACjC,KAAK,MAAM,QAAQ,IAAI,MAAM,EAAE;QAC7B,WAAW,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;KAC1C;IAED,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC;AAEF,gDAAgD;AAChD,MAAM,CAAC,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,IAAI,UAAS,KAAK;IACzD,OAAO,OAAO,KAAK,KAAK,QAAQ;QAC9B,QAAQ,CAAC,KAAK,CAAC;QACf,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;AAChC,CAAC,CAAC;AAEF,MAAM,CAAC,IAAI,kBAAkB,GAAG,CAAC,IAAS,EAAE,GAAQ,EAAE,EAAE;IACtD,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,EAAE;QACrC,OAAO,GAAG,CAAC;KACZ;IAED,MAAM,IAAI,GAAG,EAAE,CAAC;IAEhB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;QAC3B,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;YAChC,MAAM,CAAC,IAAI,EAAE,kBAAkB,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SACjD;aAAM;YACJ,IAAY,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;SAChE;IACH,CAAC,CAAC,CAAC;IAEH,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAGF,IAAa,YAAY,oBAAzB,MAAa,YAAY;IAKvB,YAAoB,GAAW;QAAX,QAAG,GAAH,GAAG,CAAQ;IAAI,CAAC;IAJ7B,MAAM,CAAC,EAAE,CAAC,GAAQ;QACvB,OAAO,IAAI,cAAY,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IAIM,GAAG,CAAC,SAAoB;QAC7B,OAAO,GAAG,EAAE;YACV,IAAI,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE;gBAC1C,OAAO,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAChC;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;IACJ,CAAC;CACF,CAAA;AAfY,YAAY;IADxB,QAAQ,EAAE;GACE,YAAY,CAexB;SAfY,YAAY\"}","code":"import * as tslib_1 from \"tslib\";\nvar LazyOptional_1;\nimport { resolver } from \"aurelia-dependency-injection\";\nexport let extend = (destination, source) => {\n    // tslint:disable-next-line:forin\n    for (const property in source) {\n        destination[property] = source[property];\n    }\n    return destination;\n};\n// tslint:disable-next-line:only-arrow-functions\nexport const isInteger = Number.isInteger || function (value) {\n    return typeof value === \"number\" &&\n        isFinite(value) &&\n        Math.floor(value) === value;\n};\nexport let assignObjectToKeys = (root, obj) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    const opts = {};\n    Object.keys(obj).map((key) => {\n        if (typeof obj[key] === \"object\") {\n            extend(opts, assignObjectToKeys(key, obj[key]));\n        }\n        else {\n            opts[root !== \"\" ? root + \".\" + key : key] = obj[key];\n        }\n    });\n    return opts;\n};\nlet LazyOptional = LazyOptional_1 = class LazyOptional {\n    constructor(key) {\n        this.key = key;\n    }\n    static of(key) {\n        return new LazyOptional_1(key);\n    }\n    get(container) {\n        return () => {\n            if (container.hasResolver(this.key, false)) {\n                return container.get(this.key);\n            }\n            return null;\n        };\n    }\n};\nLazyOptional = LazyOptional_1 = tslib_1.__decorate([\n    resolver()\n], LazyOptional);\nexport { LazyOptional };\n//# sourceMappingURL=utils.js.map"}
