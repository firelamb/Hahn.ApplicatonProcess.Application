{"map":"{\"version\":3,\"file\":\"aurelia-i18n-loader.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/aurelia-i18n-loader.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import * as tslib_1 from \"tslib\";\nexport class Backend {\n    constructor(services, options = {}) {\n        this.services = services;\n        this.options = options;\n        this.type = \"backend\";\n        this.init(services, options);\n    }\n    static with(loader) {\n        this.loader = loader;\n        return this;\n    }\n    init(services, options = {}) {\n        this.services = services;\n        this.options = Object.assign({}, {\n            loadPath: \"/locales/{{lng}}/{{ns}}.json\",\n            addPath: \"locales/add/{{lng}}/{{ns}}\",\n            allowMultiLoading: false,\n            parse: JSON.parse\n        }, options);\n    }\n    readMulti(languages, namespaces, callback) {\n        let loadPath = this.options.loadPath;\n        if (typeof this.options.loadPath === \"function\") {\n            loadPath = this.options.loadPath(languages, namespaces);\n        }\n        const url = this.services\n            .interpolator\n            .interpolate(loadPath, { lng: languages.join(\"+\"), ns: namespaces.join(\"+\") });\n        this.loadUrl(url, callback);\n    }\n    read(language, namespace, callback) {\n        let loadPath = this.options.loadPath;\n        if (typeof this.options.loadPath === \"function\") {\n            loadPath = this.options.loadPath([language], [namespace]);\n        }\n        const url = this.services.interpolator.interpolate(loadPath, { lng: language, ns: namespace });\n        this.loadUrl(url, callback);\n    }\n    loadUrl(url, callback) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            try {\n                const response = yield Backend.loader.loadText(url);\n                let ret;\n                let err;\n                try {\n                    ret = (response instanceof Object) ? response : this.options.parse(response, url);\n                }\n                catch (e) {\n                    err = \"failed parsing \" + url + \" to json\";\n                }\n                if (err) {\n                    return callback(err, false);\n                }\n                callback(null, ret);\n            }\n            catch (_a) {\n                callback(\"failed loading \" + url, false /* no retry */);\n            }\n        });\n    }\n    // tslint:disable-next-line:variable-name\n    create(_languages, _namespace, _key, _fallbackValue) {\n        // not supported\n    }\n}\nBackend.type = \"backend\";\nexport default Backend;\n//# sourceMappingURL=aurelia-i18n-loader.js.map"}
